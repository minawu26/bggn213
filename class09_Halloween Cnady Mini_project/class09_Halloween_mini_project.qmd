---
title: "class09_Halloween_mini_Project"
author: "Mina Wu (PID:A59013200)"
Date: 07-February-2024
format: pdf

---

## Importing candy data

Today we will analyze some data from 538 about typical Halloween candy. 


Read the csv file of the Halloween candy mini project
```{r}
candy <- read.csv("candy-data.csv", row.names=1)
candy

```

Q1. How many different candy types are in this dataset?
85
Q2. How many fruity candy types are in the dataset?
38
```{r}
type_candy <- nrow(candy)
type_candy

fruity<- sum(candy$fruity)
fruity



```
> Q. How many variables/dimensions are there? 

```{r}
ncol(candy)
```


## What is your favorite candy?

```{r}
candy["Twix", ]$winpercent

```

My favorite candy is Peanut M&Ms. 
```{r}
favorite_candy <- candy["Peanut M&Ms",]$winpercent
favorite_candy

kitkat <- candy["Kit Kat",]$winpercent
kitkat

Tootsie_roll <- candy["Tootsie Roll Snack Bars",]$winpercent
Tootsie_roll
```
Q3. What is your favorite candy in the dataset and what is it’s winpercent value?
My favorit candy is peanut M&Ms and it's winpercent value is 69.48379%.

Q4. What is the winpercent value for “Kit Kat”?
76.7686%.

Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?
49.6535% 


Folks like the skimr packagefor a first wee peak into a new dataset. Let's see what it does for this candy dataset. 

```{r}
library("skimr")
#allow you to call skimr without library using the ::
# skimr::(candy)
skim(candy)
```
Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?
Yes, the variable winpercent.

Q7. What do you think a zero and one represent for the candy$chocolate column?
1 means the candy is chocolate (true). 0 means that the candy is not chocolate (false). 

```{r}
chocolate <- candy$chocolate
chocolate
```

Q8. Plot a histogram of winpercent values.
```{r}
library(ggplot2)

ggplot(candy, aes(winpercent))+
  geom_histogram(bins =30)
```

Q9. Is the distribution of winpercent values symmetrical?
No, the distribution of winpercent values is not symmetrical. They are left-skewed.

Q10. Is the center of the distribution above or below 50%?
below 50%


-First find all chcolate candy(subset)
-Get their winpercent values
-Summarize these values into one metric
```{r}
#Find mean for the chocolate candy
chocolate_ranked <- candy$winpercent[as.logical(candy$chocolate)]
mean_chocolate <- mean(chocolate_ranked)
mean_chocolate

#Find mean for the fruity candy
fruity_ranked <- candy$winpercent[as.logical(candy$fruity)]
mean_fruity<- mean(fruity_ranked)
mean_fruity

#t-test for chocolate and fruity
t.test(chocolate_ranked, fruity_ranked)
```
Q11. On average is chocolate candy higher or lower ranked than fruit candy?
Yes, chocolate is preferred with an mean of 60.92 compared to fruity with a 
mean of 44.12.

Q12. Is this difference statistically significant?
Yes, it is significantly different, because the p-value is 2.87810^-08, 
which is less than <0.05.


## Overall Candy Rankings
load the dplyr package

```{r}
library(dplyr)
candy %>% 
  arrange(winpercent) %>% 
  head(5)
```
Q13. What are the five least liked candy types in this set?
Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.


Use arrange with desc to sort the candy in descending order.
```{r}
candy %>% 
  arrange(desc(winpercent)) %>% 
  head(5)
```

Q14. What are the top 5 all time favorite candy types out of this set?
Reese's Peanut Butter cup, Reese's miniatures, Twix, Kit Kat, and Snickers


Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot((candy),aes( winpercent, rownames(candy))) +
  geom_col()
```

Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?
```{r}
ggplot(candy)+
  aes( winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()

ggsave("barplot1.png", height =10, width=7)
```

We can now insert any image using markdown syntax. This is ! followed by square brackets and then normal brackets. 

![](barplot1.png)





Making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.
```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) +
  labs(x="Match-up Win Percent", y= NULL)
ggsave("barplot2.png", height =10, width=7)
```

![](barplot2.png)
![A dull plot](barplot2.png){#fig-gray}


```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(col=my_cols) +
   labs(x="Match-up Win Percent", y= NULL)
```


Q17. What is the worst ranked chocolate candy?
Nik L nip

Q18. What is the best ranked fruity candy?
Reeses Peanut Butte cup. 

## Taking a look at pricepercent


Install and load ggrepel. 
```{r}
library (ggrepel)
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 8)
```

```{r}
winpercent_to_pricepercent <- candy$winpercent/candy$pricepercent
best_value <- candy[which.max(winpercent_to_pricepercent),]
best_value

```
Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?
Tootsie Roll midgies


```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. The least popular out of these 5 is the Nik L Nip.

Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

## 5 Exploring the correlation structure

We will calculate all Pearson correlation vlaues. 
load the corrplot 
```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
head(cij)
corrplot(cij)
```

Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?
chocolate and fruity 

Q23. Similarly, what two variables are most positively correlated?
winpercent and chocolate

## Principal Component Analysis

THe main function is called `prcom()` we need to scale. 

Let’s apply PCA using the prcomp() function to our candy dataset 
```{r}
pca <- prcomp(candy, scale= TRUE)
summary(pca)
```
```{r}
plot(pca$x[,1:2])
```

Change the plotting character and add some color
```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```
Make the plot with gglpot 

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```


```{r}
pc.loadings <- as.data.frame(pca$rotation)

ggplot(pc.loadings)+ 
  aes(PC1,reorder(rownames(pc.loadings), PC1))+
  geom_col()
```

Use the ggrepel package and the function ggrepel::geom_text_repel() to label up the plot with non overlapping candy names like.

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

Pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:
```{r}
library(plotly)
```

```{r}
#ggplotly(p)
```

Taking a quick look at PCA our loadings
```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?
Fruity, hard, and pluribus are picked up by PC1.
